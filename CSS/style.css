/* regla css consta de 2 partes 
1) El Selector
2) Bloque de declaraciones{
atributo:Valor;
atributo-de-mas-dos-palabras: Otro-valor;} */

/* las @import son malas pr√°ctica porque son bloqueantes a la hora de que el navegador lee esta instrucci√≥n */
@import url("otra-hoja.css");


h1{
   color: orangered;
   background-color: black; 
}
/* 
Links de referencia y documentaci√≥n 
  - https://es.wikipedia.org/wiki/Hoja_de...
  - https://www.w3.org/html/logo/
  - https://www.w3.org/standards/webdesig...
  - https://www.w3.org/TR/css-2020/
  - https://developer.mozilla.org/es/docs...
  - https://cssreference.io/
  - https://caniuse.com/
  - https://codeguide.co/
*/

/* 
Existen 3 Selectores Basicos
1)Etiquetas - son elementos html
2)Identificadores - at¬°buto id - #
3)Clases - atributo class- .
*/

p{
    color: midnightblue;
}

/* Dar estilos con id se considera un antipatron(mala practica) */
#parrafo-2{
background-color: skyblue;
}

/* Dar estilos con clases nos permite reutilizar nuestro c√≥digo css */

.bg-skyblue {
    background-color: skyblue;
}
.bg-steelblue {
    background-color: steelblue;
}
.text-20 {
    font-size: 20px;
}
.text-32 {
    font-size: 32px;
}
.text-white {
    color: white;
}
.hijos-directos>li{
    background-color: thistle;
}
.hijos-descendientes b {
    background-color: thistle;
}
/* los elementos de hermmanos vana a aplicar a los elementos que nos son hermanos y que est√©n por debajo del elemento de referencia*/
.hermanos-general ~ li{
    background-color: thistle;
}
.hermanos-adyacentes + li{
    background-color: thistle;
}
/* selectortes de atributos */
.selectores-atributos a[href]{
    color: orange;
}

.selectores-atributos a[target="_blank"]{
    font-weight: bold;
}

/* El comod√≠n del * aplica el estilo si contiene el texto en cuesti√≥n en cualquier parte*/
.selectores-atributos a[href*="jonmircha"]{
    font-size: 24px;
}
/* El comod√≠n del ^ aplica el estilo si contiene el texto en cuesti√≥n al inicio */
.selectores-atributos a[href^="https://"]{
 text-decoration: none;
}
/* El comod√≠n del $ aplica el estilo si contiene el texto en cuesti√≥n al final */
.selectores-atributos a[href$=".com"]{
 background-color: black;
}
/* El comod√≠n del ~ aplica el estilo si contiene el texto en cuesti√≥n en una lista separada por espacios */
.selectores-atributos a[class~="cursos"]{
 background-color: steelblue;
}
/* El comod√≠n del | aplica el estilo si contiene el texto en cuesti√≥n en una lista separada por espacios y que despues del texto en cuestion venga un gui√≥n medio - */
.selectores-atributos a[class|="menu"]{
 font-style: italic;
}
/* Selector Univeresal */
*{
    font-family:sans-serif
}

.selectores-universal *{
    font-size: 24px;
}

/* https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-classes */

.form-pseudoclases *:required {
 border-color: yellow;
}

.form-pseudoclases *:valid {
 border-color: greenyellow;    
}

.form-pseudoclases *:invalid {
 border-color: red;    
}

.form-pseudoclases *:focus {
 background-color: skyblue; 
}

.form-pseudoclases *:disabled {
 background-color: pink;

}
.menu-pseudoclases a:link {
    color: grey;
}

.menu-pseudoclases a:visited {
    color: olive;
}

.menu-pseudoclases a:hover {
    color: orange;
}

.p-pseudoclases:hover {
    font-size: 20px;
}

#temario-css:target {
  background-color: lightgreen;  
}

.lista-pseudoclases li:first-child {
    color: green;
}

.lista-pseudoclases li:last-child {
    color: violet;
}

.lista-pseudoclases li:nth-child(3) {
    color: navy;
}

.lista-pseudoclases li:nth-child(4n) {
   font-size: 20px;
}

.lista-pseudoclases li:nth-child(3n + 1) {
   font-weight: bold;
}

.lista-pseudoclases li:nth-child(even) {
   background-color: yellow;
}

.lista-pseudoclases li:nth-child(odd) {
   background-color: orange;
}

.articulo-pseudoclases p:first-of-type {
    background-color: pink;
}
.articulo-pseudoclases p:last-of-type {
    background-color: violet;
}
.articulo-pseudoclases p:nth-of-type(3) {
    background-color: fuchsia;
}

.articulo-pseudoclases *:not(p) {
    background-color: beige;
}
/* https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-elements */

.saga-geminis::before {
    content: "ü§º‚Äç‚ôÇÔ∏è";
}

.saga-geminis::after {
    content: "‚ôäÔ∏è";
}

.saga-precio::before {
    content: "$";
    font-weight: bold
}

.saga-precio::after {
    content: "USD";
    font-weight: bold
}

.p-pseudoelementos::first-letter {
    font-weight: bold;
    font-size: 32px;
}

.p-pseudoelementos::first-line {
    color: coral;
}

.p-pseudoelementos::selection {
    color: greenyellow;
    background-color: black;
}

.input-pseudoelementos::placeholder {
    color: green;
}

/* Agrupar Selectores (se agrupan con la ,) */
.form-agrupar-selectores input[type="text"], 
.form-agrupar-selectores input[type="email"], 
.form-agrupar-selectores textarea {
    border-color: yellow;
    border-width: 2px;
    border-style: dashed;
    background-color: black;
    font-size: 20px;
    display: block;
    width: 300px;
}

/* El algoritmo de CSS: es la forma en que el navegador aplica los estilos al documento HTML. Es vital entender este concepto para que entiendas como se aplican y en algunas ocaciones se sobreescriben las reglas CSS
 1)La C√°scada.
 2)La Especificidad.
 3)La Herencia.

 1- La c√°scada es el mecanismo en el que el navegador aplica estilos y toma en cuenta lo siguiente en este orden:
    El Origen del C√≥digo:
   . El User Agent (los estilos por defecto del navegador).
   . Personalizaciones del Usuario.
   . Los Estilos del Autor.

 2- La especificidad es el peso que tiene un selector cuando hay conflicto de estilos. se calcula de la siguiente forma::after 
    La Especificidad del Selector.
    . Etiquetas y Pseudoetiquetas-----------------0,0,0,1
    . Clases, Atributos y Pseudoatributos---------0,0,1,0 
    . Identificadores-----------------------------0,1,0,0
    . Estilos en L√≠nea----------------------------1,0,0,0
    !important---------------------rompe la especificidad

 3- La Herencia, es la capacidad de un selector de obtener (heredar) los valores de sus ancestros m√°s cercanos, para aplicarla se usa el valor inherit, si queremos evitarla podemos asignar otro valor o inicializar la propiedad en cuestin con el valor initial.
    Orden de Aplicaci√≥n.
    los bordes y los fondos no se heredan 
    https://web.dev/learn/css/inheritance?hl=es
 */

 blockquote#cita-marco.cita-marco{
    background-color: lightskyblue;
 }

 blockquote{
    background-color: burlywood;
 }

 #cita-marco{
    background-color: lightgreen;
 }

 blockquote.cita-marco{
    background-color: tomato;
 }
 .cita-marco {
 background-color: cornflowerblue;
 }

.cita-marco{
    background-color: mediumaquamarine !important;
}

 blockquote#cita-marco{
    background-color: lightsalmon;
 }

 .cita-marco{
    background-color: moccasin !important;
    background-color: orange !important;
    font-size: 32px;
    border-style: dotted;
    border-color: red;
}

.cita-marco cite {
    background-color: pink;
    background-color: inherit;
    font-size: 24px;
    font-size: initial;
    border-style: inherit;
    border-color: inherit;
}

/* 
https://autoprefixer.github.io/
https://caniuse.com/ 
 Pefijos de los Navefadores
   -webkit-user-select: none;
   -moz-user-select: none;
   -ms-user-select: none;
   user-select: none; 
*/
